version: '3.8'
services:
  # Service pour l'application Node.js (Express)
  ms-auth:
    build: .
    container_name: ms-auth-${NODE_ENV:-development}
    working_dir: /app
    ports:
      - "3000:3000"  # Expose le port 3000 sur l'hôte
    # Suppression du volume qui écrase les node_modules
    # volumes:
    #   - .:/app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DATABASE=auth_db
      - PG_HOST=ms-auth-db
      - PG_PORT=5432
      - JWT_SECRET=123456
      - VIRTUAL_HOST=ms-auth
      - VIRTUAL_PORT=3000
      - SERVICE_NAME=ms-auth
      - SERVICE_PORT=3000
    depends_on:
      - ms-auth-db
    networks:
      - ms-network  # S'assurer que ms-auth est sur le même réseau que l'API Gateway
      - traefik-public
    command: ["npm", "start"]  # Commande pour démarrer votre application
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ms-auth.rule=PathPrefix(`/ms-auth`)"
      - "traefik.http.services.ms-auth.loadbalancer.server.port=3000"

  # Service pour la base de données PostgreSQL
  ms-auth-db:
    image: postgres:17-alpine
    container_name: ms-auth-db-${NODE_ENV:-development}
    networks:
      - ms-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auth_db
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"  # Expose le port 5432 pour PostgreSQL

networks:
  ms-network:
    external: true
  traefik-public:
    name: traefik-public
    external: ${TRAEFIK_EXTERNAL:-true}  # Permet de créer le réseau si nécessaire

volumes:
  pg_data:
    name: ms-auth-db-${NODE_ENV:-development}
